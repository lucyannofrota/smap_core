{
  "keys": {},
  "groups": {
    "mainwindow": {
      "keys": {
        "geometry": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'01d9d0cb00030000000000480000001b000003ba000002300000004800000040000003ba00000230000000000000000007800000004800000040000003ba00000230')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "     H     0 H @   0      H @   0"
        },
        "state": {
          "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000000fd000000010000000300000373000001c7fc0100000001fb0000004c007200710074005f0063006f006e0073006f006c0065005f005f0043006f006e0073006f006c0065005f005f0031005f005f0043006f006e0073006f006c00650057006900640067006500740100000000000003730000026300ffffff000003730000000000000004000000040000000800000008fc00000001000000030000000100000036004d0069006e0069006d0069007a006500640044006f0063006b00570069006400670065007400730054006f006f006c0062006100720000000000ffffffff0000000000000000')",
          "type": "repr(QByteArray.hex)",
          "pretty-print": "                 Lrqt_console__Console__1__ConsoleWidget                            6MinimizedDockWidgetsToolbar        "
        }
      },
      "groups": {
        "toolbar_areas": {
          "keys": {
            "MinimizedDockWidgetsToolbar": {
              "repr": "8",
              "type": "repr"
            }
          },
          "groups": {}
        }
      }
    },
    "pluginmanager": {
      "keys": {
        "running-plugins": {
          "repr": "{'rqt_console/Console': [1]}",
          "type": "repr"
        }
      },
      "groups": {
        "plugin__rqt_console__Console__1": {
          "keys": {},
          "groups": {
            "dock_widget__ConsoleWidget": {
              "keys": {
                "dock_widget_title": {
                  "repr": "'Console'",
                  "type": "repr"
                },
                "dockable": {
                  "repr": "True",
                  "type": "repr"
                },
                "parent": {
                  "repr": "None",
                  "type": "repr"
                }
              },
              "groups": {}
            },
            "plugin": {
              "keys": {
                "exclude_filters": {
                  "repr": "'severity'",
                  "type": "repr"
                },
                "filter_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff000000010000000200000070000000700100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "       p p     "
                },
                "highlight_filters": {
                  "repr": "'node'",
                  "type": "repr"
                },
                "message_limit": {
                  "repr": "20000",
                  "type": "repr"
                },
                "paused": {
                  "repr": "False",
                  "type": "repr"
                },
                "settings_exist": {
                  "repr": "True",
                  "type": "repr"
                },
                "show_highlighted_only": {
                  "repr": "True",
                  "type": "repr"
                },
                "table_splitter": {
                  "repr(QByteArray.hex)": "QtCore.QByteArray(b'000000ff00000001000000020000009c000000e90100000009010000000200')",
                  "type": "repr(QByteArray.hex)",
                  "pretty-print": "               "
                }
              },
              "groups": {
                "exclude_filter_0": {
                  "keys": {
                    "enabled": {
                      "repr": "True",
                      "type": "repr"
                    },
                    "itemlist": {
                      "repr": "''",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                },
                "highlight_filter_0": {
                  "keys": {
                    "enabled": {
                      "repr": "True",
                      "type": "repr"
                    },
                    "itemlist": {
                      "repr": "['topological_map', 'semantic_mapper']",
                      "type": "repr"
                    },
                    "regex": {
                      "repr": "False",
                      "type": "repr"
                    },
                    "text": {
                      "repr": "'Semantic_Mapper'",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                },
                "highlight_filter_1": {
                  "keys": {
                    "enabled": {
                      "repr": "True",
                      "type": "repr"
                    },
                    "regex": {
                      "repr": "False",
                      "type": "repr"
                    },
                    "text": {
                      "repr": "'topological_map'",
                      "type": "repr"
                    }
                  },
                  "groups": {}
                }
              }
            }
          }
        }
      }
    }
  }
}